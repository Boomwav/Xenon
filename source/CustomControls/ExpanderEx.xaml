<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ExpanderExDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Viewbox x:Name="CollapsedIcon" Stretch="Uniform" Height="22"
                                     VerticalAlignment="Center" HorizontalAlignment="Center"
                                     Grid.Column="0" Margin="5,0,5,0" Opacity="0.5">
                                <Canvas Width="256" Height="256" Canvas.Left="0" Canvas.Top="0">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Resources/>
                                    <Line Stroke="#cae4fb" X1="73.333" Y1="128" X2="183.333" Y2="128" StrokeThickness="10" StrokeMiterLimit="10" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                    <Line Stroke="#cae4fb" X1="128.333" Y1="73.335" X2="128.333" Y2="183.333" StrokeThickness="10" StrokeMiterLimit="10" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                </Canvas>
                            </Viewbox>
                            <Viewbox x:Name="ExpandedIcon" Stretch="Uniform" Height="22"
                                     VerticalAlignment="Center" HorizontalAlignment="Center"
                                     Grid.Column="0" Margin="5,0,5,0" Opacity="0.5"
                                     Visibility="Collapsed">
                                <Canvas Width="256" Height="256" Canvas.Left="0" Canvas.Top="0">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Resources/>
                                    <Line Stroke="#cae4fb" X1="73.333" Y1="128" X2="183.333" Y2="128" StrokeThickness="10" StrokeMiterLimit="10" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                </Canvas>
                            </Viewbox>
                            <ContentPresenter Grid.Column="1" VerticalAlignment="Center"
                                              SnapsToDevicePixels="True" HorizontalAlignment="Stretch" RecognizesAccessKey="True"  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandedIcon" Value="Visible" />
                            <Setter Property="Visibility" TargetName="CollapsedIcon" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ExpanderEx}" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Background" Value="{DynamicResource ExpanderExBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton x:Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                      Style="{DynamicResource ExpanderExDownHeaderStyle}"
                                      Padding="{TemplateBinding Padding}"
                                      MinHeight="25" DockPanel.Dock="Top"
                                      Background="{TemplateBinding Background}"
                                      Content="{TemplateBinding Header}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="Border" DockPanel.Dock="Top" Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="Border" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=ToggleButton, Path=IsMouseOver}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ExpanderExIsMouseOverBackgroundBrush}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>